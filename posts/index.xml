<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on Georg Šumailov</title><link>https://ciggy.beer/posts/</link><description>Recent content in Blog on Georg Šumailov</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener"&gt;CC BY-NC 4.0&lt;/a&gt;</copyright><lastBuildDate>Tue, 14 Mar 2023 17:53:18 +0200</lastBuildDate><atom:link href="https://ciggy.beer/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Code for artsy purposes?</title><link>https://ciggy.beer/posts/creative-programming/</link><pubDate>Tue, 14 Mar 2023 17:53:18 +0200</pubDate><guid>https://ciggy.beer/posts/creative-programming/</guid><description>&lt;h2 id="the-need-for-creation"&gt;The need for creation&lt;/h2&gt;
&lt;p&gt;Like many others I enjoy creating and building stuff.
It can range from a small video skit sent to a friend to carving out a viking shield.
Usually my small obsessions don&amp;rsquo;t last for too long but nonetheless they come and go periodcally,
fulfilling my need for creation. Being a software developer I of course enjoy programming as well,
the amount of impact &lt;a href="https://youtu.be/DmV49ogMDEI"&gt;one good engineer&lt;/a&gt; can create is immeasurable and fascinating.&lt;/p&gt;</description><content type="html"><![CDATA[<h2 id="the-need-for-creation">The need for creation</h2>
<p>Like many others I enjoy creating and building stuff.
It can range from a small video skit sent to a friend to carving out a viking shield.
Usually my small obsessions don&rsquo;t last for too long but nonetheless they come and go periodcally,
fulfilling my need for creation. Being a software developer I of course enjoy programming as well,
the amount of impact <a href="https://youtu.be/DmV49ogMDEI">one good engineer</a> can create is immeasurable and fascinating.</p>
<p>Unfortunately software engineering world can be rough on creativity with over 9000 meetings, scattered obsolete documentation,
overly bloated legacy development process, never-ending jira logging changes, [&hellip;]  and much more.
Coupled with strict deadlines software development can be all over the place and there will be little time for creative thinking.</p>
<p>One could argue on the aforementioned statements and it&rsquo;s completely justified but this post is not about making translation
of business requirements into code fun, it&rsquo;s about:</p>
<p><em>&ldquo;I&rsquo;m tired of bloated clicka-clicka in backend, what cool artsy shiet I can do with code?&rdquo;</em></p>
<h2 id="creative-coding">Creative coding</h2>
<p>As you might expect there are different ways to interpret the term <em>creative coding</em>.
It&rsquo;s unclear whether we&rsquo;re talking about the creative process, the medium (code) or the output.
To narrow down the scope of this post I will be interpreting creative programming within this
definition <a href="https://www.frontendplanet.com/what-is-creative-developer/">[1]</a>:</p>
<p><em>&ldquo;Creative coding is a type of computer programming in which the goal is to create something expressive instead of something functional.&rdquo;</em></p>
<p>You don&rsquo;t have strict guidelines, goals or acceptance criteria.
It&rsquo;s about exploration and discovery of mostly unexpected results <a href="https://timrodenbroeker.de/what-is-creative-coding/">[2]</a>.</p>
<p>Here&rsquo;s a birds-eye view of what people have creatively coded.</p>
<h2 id="demoscenes">Demoscenes</h2>
<p>Computer art subculture focused on producing EXTREMELY small filesize (and not only!) audiovisual presentations achieved with low-level code.</p>
<figure>
  <img src="/images/himalaya__TBC__1k.gif" alt="Himalaya 1k" /><figcaption>Himalaya 1k</figcaption></figure> 
<p>This .gif is actually a small section of an <a href="https://www.youtube.com/watch?v=mjG1lGCwNAM&amp;ab_channel=DemosceneHigh-QualityVideos%28Annikras%29">OVER 10-MINUTE LONG video WITH AUDIO</a> which is ONLY 1024 bytes.
For reference in Java 1024 bytes can be achieved with 128 long datatype variables.</p>
<p>Weird flex but okay, moving on!</p>
<h2 id="live-coding-music">Live coding music</h2>
<p>In 2020, during my 1st semester computer science studies me and my friend made a 2D Python game <em>Bimgus</em> in post-apocalyptic setting for our Programming class.</p>
<figure>
  <img src="/images/bimgus.png" alt="Bimgus" /><figcaption>Bimgus</figcaption></figure> 
<p>Most of the visuals were made in paint :) .
Why not make SFX and music ourselves if we have fallen this low anyway?.. Why not <em>code</em> the music?</p>
<p>Lucky for us I&rsquo;ve found <a href="https://sonic-pi.net/">Sonic PI</a> code-based music creation tool and thus Bimgus soundtracks were born (a few samples):</p>
<ul>
<li>Main game theme <audio controls>
  <source src="/music/main_game_theme.mp3" type="audio/mpeg">
  Your browser does not support the audio element.
</audio> </li>
<li>Death sound effect <audio controls>
  <source src="/music/death_sound.mp3" type="audio/mpeg">
  Your browser does not support the audio element.
</audio> </li>
<li>Game over theme <audio controls>
  <source src="/music/gameover_theme.mp3" type="audio/mpeg">
  Your browser does not support the audio element.
</audio> </li>
</ul>
<p>Ruby-based Sonic-PI let&rsquo;s you write music in real-time, great for novice game-development as well as ultra-gigachad 8-bit/techno/rave coding DJ experience.</p>
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
      <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/YvsoWehBbec?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"></iframe>
    </div>

<h2 id="generative-art">Generative art</h2>
<p>Generative art is a form of art that is created through the use of algorithms and code. Meaning code itself can&rsquo;t predict
the outcome and therefore result is often unique and unpredictable.</p>
<p>Generative art could be achieved with simple vanilla javascript and a bunch of Math.random()
functions coupled with color-filled objects.</p>
<p>(move your cursor or touch your phone screen for slight epilepsy)
<canvas id="generative-art-canvas" style="border:1px solid"> </canvas></p>
<script type="text/javascript" src="../../js/generative.js"></script>
<p>I played around with code from <a href="https://youtu.be/0v4_Dw0K8pw">here</a> to achieve the result above.</p>
<p>It&rsquo;s a really rewarding experience because it doesn&rsquo;t take much time to start and is a lot of fun to experiment with.</p>
<p>Of course there are multiple .js libraries made for generative art, for example <a href="https://editor.p5js.org/">p5.js</a> with built-in
web editor so you don&rsquo;t even need to download anything to try it out.</p>
<p>From my humble observations I&rsquo;ve noticed the following about generative art real-world applications:</p>
<ul>
<li>It&rsquo;s great for advertisement background posters.</li>
<li>People sell it.</li>
</ul>
<figure>
  <img src="/images/generative_art_etsy.jpg" alt="Generative art put up for sale on Etsy" /><figcaption>Generative art put up for sale on Etsy</figcaption></figure> 
<h2 id="donut-shaped-c-code">Donut-shaped C code</h2>
<p>This deserves an extra category.</p>
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
      <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/DEqXNfs_HhY?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"></iframe>
    </div>

<h2 id="my-experience">My experience</h2>
<h3 id="ascii-art">ASCII art</h3>
<p>In 2021 my friend reached out to me about ideas for a video intro and outro.
The video was a compilation broken up into various parts and for every part he wanted a special intro clip.
He asked if I could come up with something <em>code-ish</em> for one of the parts of the video and I agreed.</p>
<p>I never really thought about code being used in such artsy endeavours before which made this little task extremely interesting for me.</p>
<p>I decided to go with old-school-like terminal-loading script in Python which printed out ASCII art of the video title.</p>
<p>In the end script produced the following (sped-up ~2x):</p>
<figure>
  <img src="/images/ascii.gif" alt="Python script which prints ASCII art" /><figcaption>Python script which prints ASCII art</figcaption></figure> 
<p>For the outro I accidentally made progress bar to be printed out separately on each line and I liked how it looked visually so I went with it.</p>
<figure>
  <img src="/images/ascii_2.gif" alt="Python script which prints ASCII art" /><figcaption>Python script which prints ASCII art</figcaption></figure> 
<p><em>There are no mistakes, just happy little accidents.</em>
[bob_ross_beating_the_devil_out_of_it.jpg]</p>
<p>ASCII art was generated with this online tool: <a href="https://patorjk.com/software/taag/#p=display&amp;f=Graffiti&amp;t=Type%20Something%20">patorjk.com</a></p>
<h3 id="obscure-websites">Obscure websites</h3>
<p>On one beautiful evening I&rsquo;ve stumbled (I don&rsquo;t remember how, maybe a sticker on the street lamp-post?) upon Estonian electronic/techno/something music website
<a href="https://amfiib.com/index.html">amfiib.com</a> and was fascinated by
the old-school terminal-like design. They had an &ldquo;explore&rdquo; page which listed a few more interesting websites:</p>
<ul>
<li><a href="https://sunk.world/">sunk.world</a> (Portfolio?..)</li>
<li><a href="https://tape.run/">tape.run</a> (I suspect this website is also produced with <a href="https://themes.gohugo.io/themes/hugo.386/">hugo theme</a>)</li>
<li><a href="https://reivkom.ee/">reivkom.ee</a> (Simple rave website made look like a shell script)</li>
<li><a href="https://ajuokse.ee/">ajuokse.ee</a> (Art website)</li>
<li><a href="https://aigar.guru/">aigar.guru</a> (Spiritual enlightenment music, idk o_o)</li>
</ul>
<p>Inspired, I felt the need to take up some internet space with esoteric content myself.</p>
<p>I didn&rsquo;t know what exactly I wanted to do but I knew that I wanted to finish it that night. I&rsquo;ve looked up some basic
<a href="https://threejs.org/">three.js</a> tutorials and it was mind-blowing how easily one can create interactive 3D content on the web without prior experience.
A few beers, three.js tutorials
and stolen codesnippet examples later <a href="https://cybersepp.github.io/fever-dream/">this website</a> was born.</p>
<p>It may seem like a 2D world but your browser actually uses a lot more processing power than it should because it&rsquo;s actually 3D!
I just disabled user input.</p>
<p>User controls for navigating around the world is just one line of code away. Really fun.</p>
<h2 id="its-a-real-job">It&rsquo;s a real job?</h2>
<p>There are not many creative programmer job applications out there but you can definitely be one.
Quite a few companies like gucci require custom-made highly interactive websites.
For <a href="https://marmont.gucci.com/">example this gucci website</a> was made with three.js library.</p>
<p>From different salary sources I&rsquo;ve noticed that the closer you are to being an artist the less you make, oh well.</p>
<p>Average salary is lower than the frontend developer roles but it highly depends on the place and project.</p>
<h2 id="references">References</h2>
<p>[1] <a href="https://en.wikipedia.org/wiki/Creative_coding">https://en.wikipedia.org/wiki/Creative_coding</a></p>
<p>[2] <a href="https://timrodenbroeker.de/what-is-creative-coding/">https://timrodenbroeker.de/what-is-creative-coding/</a></p>
]]></content></item><item><title>Why did I make a personal website?</title><link>https://ciggy.beer/posts/prologue/</link><pubDate>Sat, 29 Jan 2022 01:50:34 +0200</pubDate><guid>https://ciggy.beer/posts/prologue/</guid><description>&lt;h2 id="purpose"&gt;Purpose&lt;/h2&gt;
&lt;p&gt;There are many reasons for why one would want a website for personal use.
In my case I needed a website that would fulfil the following criteria:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Website hosting must be free (because I&amp;rsquo;m poor)&lt;/li&gt;
&lt;li&gt;Clean-looking&lt;/li&gt;
&lt;li&gt;Add content with ease&lt;/li&gt;
&lt;li&gt;Easy to set up&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main purpose of this website is to share content and my toughts on various topics for me and my friends.
Besides, I haven&amp;rsquo;t done anything like this before.
So naturally I went out and asked google for advice on what technology to use for building a website.
I was instantly overwhelmed with the number of options available.&lt;/p&gt;</description><content type="html"><![CDATA[<h2 id="purpose">Purpose</h2>
<p>There are many reasons for why one would want a website for personal use.
In my case I needed a website that would fulfil the following criteria:</p>
<ul>
<li>Website hosting must be free (because I&rsquo;m poor)</li>
<li>Clean-looking</li>
<li>Add content with ease</li>
<li>Easy to set up</li>
</ul>
<p>The main purpose of this website is to share content and my toughts on various topics for me and my friends.
Besides, I haven&rsquo;t done anything like this before.
So naturally I went out and asked google for advice on what technology to use for building a website.
I was instantly overwhelmed with the number of options available.</p>
<h2 id="options">Options</h2>
<p>After a bit of searching I&rsquo;ve stumbled upon <a href="https://fouryears.eu/2016/05/19/where-could-i-host-my-website/">this article</a>
by Konstantin Tretyakov which answered all of my questions in a very structured and concise way.
If you ever need help deciding what options are the most suitable for building your own future website I highly recommend the aforementioned article.</p>
<h2 id="end-result">End result</h2>
<p>I&rsquo;ve decided to go with the static site generators as they are the most suitable option for my needs. Now there are a few to choose from, the most popular ones being
<a href="https://jekyllrb.com/">jekyll</a> and <a href="https://gohugo.io/">hugo</a>.
The first one has been around for a while now, since 2008 and hugo is a bit more fresh, being released in 2013. Now I understood that hugo is more lightweight compared to jekyll but overall they both would work equally well for my website. So hugo it is.</p>
<p>Now comes the question, where do I host? Turns out that <a href="https://github.com/">github</a> provides free hosting for one website per user.
There we go, all the building blocks are in place. Last thing to do was to make an actual website and hook it up to github pages.
I ended up making two repos in github, one for source code and the other one for static files the source repo generates.
Then link them together using github sumbodules and
bada bing, bada boom - you&rsquo;re done!</p>
<p>If you&rsquo;re interested in how that looks in detail, check out this <a href="https://youtu.be/LIFvgrRxdt4">video</a>.</p>
]]></content></item><item><title>Can I hack my car?</title><link>https://ciggy.beer/posts/hack-the-car/</link><pubDate>Thu, 27 Jan 2022 18:21:07 +0200</pubDate><guid>https://ciggy.beer/posts/hack-the-car/</guid><description>&lt;p&gt;Short answer: No, not yet. ¯_(ツ)_/¯ [WIP]&lt;/p&gt;
&lt;p&gt;Inspired by this: &lt;a href="https://github.com/HackingIntoYourHeart/Unoriginal-Rice-Patty"&gt;https://github.com/HackingIntoYourHeart/Unoriginal-Rice-Patty&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Since the 1990s car manufacturers were pressured into upping their keyfob cybersecurity.
The reason behind this was usage of static codes for unlocking the car.
This implies that there was one unique code for the car which the keyfob knew.
When pressing any button on the keyfob the unique code would be sent to the car and
the car would do the desired action, e.g. unlocking itself.
The hacker would be able to (relatively) easily record the signal from the keyfob while being in close proximity and gain
unlimited access to your vehicle. This rather unfortunate and sad state of affairs is called a &lt;a href="https://en.wikipedia.org/wiki/Replay_attack"&gt;replay attack&lt;/a&gt;.&lt;/p&gt;</description><content type="html"><![CDATA[<p>Short answer: No, not yet. ¯_(ツ)_/¯ [WIP]</p>
<p>Inspired by this: <a href="https://github.com/HackingIntoYourHeart/Unoriginal-Rice-Patty">https://github.com/HackingIntoYourHeart/Unoriginal-Rice-Patty</a></p>
<p>Since the 1990s car manufacturers were pressured into upping their keyfob cybersecurity.
The reason behind this was usage of static codes for unlocking the car.
This implies that there was one unique code for the car which the keyfob knew.
When pressing any button on the keyfob the unique code would be sent to the car and
the car would do the desired action, e.g. unlocking itself.
The hacker would be able to (relatively) easily record the signal from the keyfob while being in close proximity and gain
unlimited access to your vehicle. This rather unfortunate and sad state of affairs is called a <a href="https://en.wikipedia.org/wiki/Replay_attack">replay attack</a>.</p>
<p>Aforementioned inspiration source claims that Honda was using static codes all this time. Since I own a 2002 second gen Honda CR-V I&rsquo;m going to try the replay attack on my own car.</p>
<p><a href="https://upload.wikimedia.org/wikipedia/commons/thumb/5/59/2002_Honda_CR-V_%28RD7_MY02%29_Sport_wagon_%282015-07-09%29_01.jpg/1280px-2002_Honda_CR-V_%28RD7_MY02%29_Sport_wagon_%282015-07-09%29_01.jpg"><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/59/2002_Honda_CR-V_%28RD7_MY02%29_Sport_wagon_%282015-07-09%29_01.jpg/1280px-2002_Honda_CR-V_%28RD7_MY02%29_Sport_wagon_%282015-07-09%29_01.jpg"></a></p>
]]></content></item></channel></rss>